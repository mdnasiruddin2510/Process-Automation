@model App.Domain.ViewModel.BoundaryVM
@{
    ViewBag.Title = "Boundary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="~/App_Themes/Theme1/plugins/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet">
<link href="~/App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />
<link href="~/App_Themes/Theme1/plugins/select2/select2.css" rel="stylesheet" type="text/css" />
<link href="~/Css/FormDesign.css" rel="stylesheet" />

    <div class="row">
        <div class="col-md-10">
            <div class="panel panel-color panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        <text style="text-align:left !important; text-decoration: none;" id="lblBoundaryTitle">Manage Boundary</text>
                    </h3>
                </div>
                <div class="panel-body">
                    <div class="input-group form-group col-md-12">

                    </div>
                    <div class="col-md-12" style="text-align:justify">
                        <div class="col-md-8">
                            <div class="col-md-10"hidden>
                                <label class="col-md-4" id="lblboundaryId" style="padding:initial;margin-right: -8px;">Id</label>
                                <div class="form-group col-md-6">
                                    @Html.TextBoxFor(x => x.BoundaryCode, null, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(x => x.BoundaryCode)
                                </div>
                            </div>
                            <div class="col-md-10">
                                <label class="col-md-4" id="lblboundaryName" style="padding:initial;margin-right: -8px;">Boundary Name</label>
                                <div class="form-group col-md-6">
                                    @Html.TextBoxFor(x => x.BoundaryName, null, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(x => x.BoundaryName)
                                </div>
                            </div>
                            <div class="row col-md-12" style="text-align:end">
                                <div class="col-md-9" style=" text-align:right;overflow:hidden">
                                    <img id="save" src='@Url.Content("~/Images/checked.png")' width="60" />
                                    <img id="update" src='@Url.Content("~/Images/checked.png")' width="60" />
                                    <a href='@Url.Action("Index", "Home")'>
                                        <img src='@Url.Content("~/Images/Icons/next.png")' width="50" />
                                    </a>
                                    @*<input type="button" value="Save" class="btn btn-primary" id="save" style="width:100px; margin-right:22px" />
                                    <input type="button" value="Update" class="btn btn-primary" id="update" style="width:100px; margin-right:9px" />*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<div class="row">
    <div class="col-md-10">
        <div class="panel panel-color panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title"id="tlBoundaryList">Boundary List</h3>

            </div>
            <div class="panel-body">
                <div class="row col-md-12">
                    <br />
                    @*@using (Html.BeginForm())
                    {
                        <div class="row col-md-12" style="text-align:center">
                            <input type="submit" value="Preview" class="btn btn-primary" id="preview" style="width:150px;" />
                        </div>
                    }*@
                    <div class="col-md-8" style="left:20%">
                        <br />
                        <br />
                        <table class="table table-bordered table-responsive" id="datatable" align="center">
                            <thead>
                                <tr>
                                    <th style="text-align:center;" id="tblSl">Sl.</th>
                                    <th style="text-align:center;"id="tblBoundaryName">Boundary Name</th>
                                    <th style="text-align:center;"id="tblAction">Action</th>
                                </tr>
                            </thead>
                            <tbody style="text-align:center;">
                                @if (ViewBag.Items != null)
                                {
                                    int i = 0;
                                    foreach (var item in ViewBag.Items)
                                    {
                                        <tr>
                                            @{

                                        i++;
                                            }
                                            <td>@i</td>
                                            <td>@item.BoundaryName</td>
                                            <td>
                                                <a href="#" value="@item.BoundaryName" id="edit"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span></a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
@section Scripts{


    <script src="~/App_Themes/Theme1/plugins/select2/select2.min.js" type="text/javascript"></script>
    <script src="~/App_Themes/Theme1/plugins/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.bootstrap.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.buttons.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/buttons.bootstrap.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/pdfmake.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/vfs_fonts.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/buttons.html5.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/buttons.print.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.fixedHeader.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.keyTable.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.responsive.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/responsive.bootstrap.min.js"></script>
    <script src="../App_Themes/Theme1/plugins/datatables/dataTables.scroller.min.js"></script>
    <script type="text/javascript" src="../App_Themes/Theme1/plugins/parsleyjs/dist/parsley.min.js"></script>
    <!-- Datatable init js -->
    <script src="../App_Themes/Theme1/blue/assets/pages/datatables.init.js"></script>
    <script>
        $("#save").show();
        $("#update").hide();
       
        $(document).ready(function () {
            var loadInfo = {
                Id: "",
                BoundaryName: ""
            }
            function setOrder() {
                loadInfo.Id = $("#BoundaryCode").val();
                loadInfo.BoundaryName = $("#BoundaryName").val();
            }
            function clearBoundary() {
                $("#BoundaryName").val("");
            }
            function validateOnSave(validOrder) {

                if (!validOrder.BoundaryName.trim().length) {
                    return "Please write a Name.";
                }
                return "";
            }
            $(document).on("click", "#save", function () {
                setOrder();
                var validate = validateOnSave(loadInfo);
                if (validate != "") {
                    alert(validate);
                    return;
                }
           
                $.ajax({
                    url: '@Url.Action("SaveBoundary", "Boundary")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ boundaryInfo: loadInfo}),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 1) {
                            swal({
                                title: "Ok",
                                text: "Save Successfully!",
                                type: "success"
                            }, function () {
                                location.reload();
                                clearBoundary();
                            });
                            $("#save").prop("disabled", false);
                        }
                        else if (datas == "X") {
                            swal({
                                title: "Sorry",
                                text: "No Save Permission for this User",
                                type: "warning"
                            });
                        }
                        else if (datas == 0) {
                            swal(
                                'Sorry!',
                                'All (*) field are required. These Fields can not be empty!!!',
                                'warning'
                            );
                            $("#save").prop("disabled", false);
                        }
                        else {
                            swal("This item already exists!!! Please enter another item!!!", "fail")
                        }

                    }
                });
            });
            var table = $('#datatable').dataTable({
                "paging": false,
                "ordering": false,
                "info": false,
                "searching": false,
                "scrollY": 200,
                "scrollX": true
            });

            $(document).on('click', "#edit", function () {
                var id = $(this).attr("value");
                //var name = $("#BoundaryName").val();
                $("#update").show();
                $.ajax({
                    url: '@Url.Action("GetBoundaryByName", "Boundary")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ boundary: id }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        $("#BoundaryCode").val(datas.Id);
                        $("#BoundaryName").val(datas.BoundaryName);
                        $("#save").hide();
                        $("#update").show();
                    }
                });
                $("#save").hide();

            });

            $(document).on("click", "#update", function () {
                setOrder();
                $.ajax({
                    url: '@Url.Action("UpdateBoundary", "Boundary")',
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify({ boundaryInfo: loadInfo }),
                    type: 'POST',
                    dataType: 'json',
                    success: function (datas) {
                        if (datas == 1) {
                            swal({
                                title: "Ok",
                                text: "Update Successfully!",
                                type: "success"
                            }, function () {
                                location.reload();
                                clearBoundary();
                            });
                            $("#save").prop("disabled", false);
                        }
                        else if (datas == "X") {
                            swal({
                                title: "Sorry",
                                text: "No Save Permission for this User",
                                type: "warning"
                            });
                        }
                        else if (datas == 0) {
                            swal(
                                'Sorry!',
                                'All (*) field are required. These Fields can not be empty!!!',
                                'warning'
                            );
                            $("#save").prop("disabled", false);
                        }
                        else {
                            swal("This item already exists!!! Please enter another item!!!", "fail")
                        }

                    }
                });
            });

            ////////////////////////////////////LebelDynamic//////////////////////////////////////          
            GetPhraseList();

            function GetPhraseList() {
                $.ajax({
                    url: '@Url.Action("GetAllPhrases", "Language", new { Id = "1004" })',
                    contentType: "application/json;charset=utf-8",
                    data: {},
                    type: "GET",
                    dataType: 'json',
                    success: function (data) {
                        $("#lblBoundaryTitle").html(data[0]);
                        $("#lblboundaryName").html(data[1]);
                        $("#tlBoundaryList").html(data[2]);
                        $("#tblSl").html(data[3]);
                        $("#tblBoundaryName").html(data[1]);
                        $("#tblAction").html(data[4]);                                               
                    }
                });
            }
        })//ready function
        </script>
    }








